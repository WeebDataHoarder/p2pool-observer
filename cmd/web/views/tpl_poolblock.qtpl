{% import "git.gammaspectra.live/P2Pool/p2pool-observer/cmd/index" %}
{% import "git.gammaspectra.live/P2Pool/p2pool-observer/p2pool/sidechain" %}
{% import "git.gammaspectra.live/P2Pool/p2pool-observer/types" %}

{% func TemplatePoolBlock(ctx *GlobalRequestContext, poolBlock *sidechain.PoolBlock, header string) %}
{%= TemplatePoolBlockWithSideBlock(ctx, poolBlock, header, false, nil, nil, nil, 0, nil) %}
{% endfunc %}

{% func TemplatePoolBlockWithSideBlock(ctx *GlobalRequestContext, poolBlock *sidechain.PoolBlock, header string, navigation bool, sideBlock *index.SideBlock, payouts <-chan *index.Payout, coinbaseOutputs index.MainCoinbaseOutputs, sweepsCount int, sweeps [][]*index.MainLikelySweepTransaction) %}

    {% if sideBlock != nil %}
        {% if sideBlock.MinedMainAtHeight %}
        <div class="alert alert-success">
            <h4>This share mined Monero block at height {%dul sideBlock.MainHeight %}</h4>
        </div>
        {% elseif (sideBlock.MainDifficulty > 0) && (sideBlock.PowDifficulty >= sideBlock.MainDifficulty) && !sideBlock.MinedMainAtHeight %}
        <div class="alert alert-warning">
            <h4>This share mined Monero block at height {%dul sideBlock.MainHeight %}, but was orphaned</h4>
        </div>
        {% endif %}
        {% if sideBlock.IsOrphan() %}
        <div class="alert alert-danger">
            <h4>This share has been orphaned</h4>
        </div>
        {% endif %}
    {% endif %}

<div class="container-fluid h-100 mb-3 p-2 bg-body-tertiary border rounded-2 text-center">
    {% if navigation && sideBlock != nil %}
        <div class="row">
            <div class="col col-12">
                <div class="float-start">
                    {% if sideBlock.SideHeight == 0 %}
                    Genesis Block
                    {% elseif sideBlock.IsUncle() %}
                    <a href="/share/{%= hex(ctx, sideBlock.UncleOf) %}">&lt;&lt; Parent share</a>
                    {% else %}
                    <a href="/share/{%= hex(ctx, sideBlock.ParentTemplateId) %}">&lt;&lt; Previous share</a>
                    {% endif %}
                </div>
                <div class="float-end">
                    {% if sideBlock.IsOrphan() %}
                    Orphans do not have next blocks
                    {% elseif sideBlock.IsUncle() %}
                    Uncles do not have next blocks
                    {% else %}
                    <a href="/share/{%dul sideBlock.SideHeight + 1 %}">Next share &gt;&gt;</a>
                    {% endif %}
                </div>
            </div>
        </div>
    {% endif %}

    <div class="row">
        <div class="col">
            <h2>{%s header %}</h2>
        </div>
    </div>

    <div class="row row-cols-2 row-cols-xxl-4 small">
        <div class="col pb-2">
            <strong>P2Pool Height</strong>
            <br/>
            {%dul poolBlock.Side.Height %}
        </div>
        <div class="col pb-2 text-truncate">
            <strong>P2Pool Template Id</strong>
            <br/>
            {% if sideBlock != nil %}
            <span class="mono smaller user-select-all">{%= hex(ctx, sideBlock.TemplateId) %}</span>
            {% else %}
            <span class="mono smaller user-select-all">{%= hex(ctx, poolBlock.SideTemplateId(ctx.Consensus)) %}</span>
            {% endif %}
        </div>
        <div class="col pb-2">
            <strong>Monero Height</strong>
            <br/>
            {% if sideBlock != nil %}
                {% if sideBlock.MinedMainAtHeight %}
                <a href="/b/{%s benc(sideBlock.MainHeight) %}">{%dul sideBlock.MainHeight %}</a>
                {% else %}
                {%dul sideBlock.MainHeight %}
                {% endif %}
            {% else %}
                {%dul poolBlock.Main.Coinbase.GenHeight %}
            {% endif %}
        </div>
        <div class="col pb-2 text-truncate">
            <strong>Monero Id</strong>
            <br/>
            {% if sideBlock != nil %}
                {% if sideBlock.MinedMainAtHeight %}
                <a href="/b/{%s benc(sideBlock.MainHeight) %}" class="mono smaller">{%= hex(ctx, sideBlock.MainId) %}</a>
                {% else %}
                <span class="mono smaller user-select-all">{%= hex(ctx, sideBlock.MainId) %}</span>
                {% endif %}
            {% else %}
                <span class="mono smaller user-select-all">{%= hex(ctx, poolBlock.MainId()) %}</span>
            {% endif %}
        </div>


        <div class="col pb-2" title="{%s utc_date(poolBlock.Main.Timestamp) %}">
            <strong>Age <small>[h:m:s]</small></strong>
            <br/>
            {%s date_diff_short(poolBlock.Main.Timestamp) %}
        </div>
        <div class="col pb-2 text-truncate">
            <strong>PoW Hash</strong>
            <br/>
            {% if sideBlock != nil %}
            <span class="mono smaller user-select-all">{%= hex(ctx, sideBlock.PowHash) %}</span>
            {% else %}
            <span class="mono smaller user-select-all">-</span>
            {% endif %}
        </div>
        {% if sideBlock != nil %}
        {%= TemplateGridMinerWithClass(ctx, sideBlock.MinerAddress, sideBlock.MinerAlias, "col pb-2", 10, "<strong>Found by</strong><br/>") %}
        {% else %}
        {%= TemplateGridMinerWithClass(ctx, poolBlock.GetAddress().Reference().ToAddress(ctx.Consensus.NetworkType.AddressNetwork()), "", "col pb-2", 10, "<strong>Found by</strong><br/>") %}
        {% endif %}
        <div class="col pb-2">
            <strong>Difficulty</strong>
            <br/>
            {% if sideBlock != nil %}
            <span class="mono">{%dul sideBlock.Difficulty %}</span> / <span class="mono" title="Proof of Work Difficulty">{%dul sideBlock.PowDifficulty %}</span>
            {% else %}
            <span class="mono">{%dul poolBlock.Side.Difficulty.Lo %}</span>
            {% endif %}
        </div>


        <div class="col pb-2">
            <strong>Valuation</strong>
            <br/>
            {% if sideBlock != nil %}
            {%= side_block_valuation(sideBlock, ctx.Consensus) %}
            {% else %}
            {%= side_block_valuation(poolBlock, ctx.Consensus) %}
            {% endif %}
        </div>
        <div class="col pb-2 text-truncate">
            <strong>Coinbase Id</strong>
            <br/>
            {% if sideBlock != nil && sideBlock.MinedMainAtHeight %}
            <span class="mono smaller user-select-all"><a href="/t/{%= henc(poolBlock.CoinbaseId()) %}">{%= hex(ctx, poolBlock.CoinbaseId()) %}</a></span>
            {% else %}
            <span class="mono smaller user-select-all">{%= hex(ctx, poolBlock.CoinbaseId()) %}</span>
            {% endif %}
        </div>
        <div class="col pb-2">
            <strong>Coinbase Reward</strong>
            <br/>
            {%s monero_to_xmr(poolBlock.Main.Coinbase.TotalReward) %} XMR
        </div>
        <div class="col pb-2 text-truncate">
            <strong>Coinbase Private Key</strong>
            <br/>
            <span class="mono smaller user-select-all">{%= hex(ctx, poolBlock.Side.CoinbasePrivateKey) %}</span>
        </div>


        <div class="col pb-2">
            <strong>Nonce</strong>
            <br/>
            <span class="mono" title="{%= hex(ctx, poolBlock.Main.Nonce) %}">{%dul uint64(poolBlock.Main.Nonce) %}</span>
        </div>
        <div class="col pb-2">
            <strong>Cumulative Difficulty</strong>
            <br/>
            <span class="mono smaller">{%= hex(ctx, poolBlock.Side.CumulativeDifficulty) %}</span>
        </div>
        <div class="col pb-2">
            <strong>Extra Nonce</strong>
            <br/>
            <span class="mono" title="{%= hex(ctx, poolBlock.ExtraNonce()) %}">{%dul uint64(poolBlock.ExtraNonce()) %}</span>
        </div>
        <div class="col pb-2">
            <strong>
                <img src="/assets/monero-symbol.svg" alt="Monero" width="19" height="19" class="d-inline-block align-text-top"/>
                <span class="d-inline-block align-text-top">Target Difficulty</span>
            </strong>
            <br/>
            <span class="mono">{% if sideBlock != nil && sideBlock.MainDifficulty != 0 %}{%dul sideBlock.MainDifficulty %}{% endif %}</span>
        </div>


        <div class="col pb-2">
            <strong>Software</strong>
            <br/>
            {%= software_info(poolBlock.Side.ExtraBuffer.SoftwareId, poolBlock.Side.ExtraBuffer.SoftwareVersion) %}
        </div>
        <div class="col pb-2">
            <strong>Version Signaling</strong>
            <br/>
            {%s= poolBlock.ShareVersion().String() %} <span class="small">({% if poolBlock.ShareVersionSignaling() != sidechain.ShareVersion_None %}signaling {%s= poolBlock.ShareVersionSignaling().String() %} support{% else %}no known signaling{% endif %})</span>
        </div>
        <div class="col pb-2">
            {% if poolBlock.ShareVersion() > sidechain.ShareVersion_V1 %}
            <strong>Template Extra Buffer</strong>
            <br/>
            <span class="mono" title="Random Number">{%= hex(ctx, poolBlock.Side.ExtraBuffer.RandomNumber) %}</span> / <span class="mono" title="SideChain Extra Nonce">{%= hex(ctx, poolBlock.Side.ExtraBuffer.SideChainExtraNonce) %}</span>
            {% endif %}
        </div>
        <div class="col pb-2 text-truncate" title="The seed is used for the deterministic generation of the Coinbase Private Key, and is derived from other fields in the share or historic data.">
            <strong>Deterministic Private Key Seed</strong>
            <br/>
            {% if poolBlock.GetPrivateKeySeed() != types.ZeroHash %}
            <span class="mono smaller user-select-all">{%= hex(ctx, poolBlock.GetPrivateKeySeed()) %}</span>
            {% else %}
            Not Deterministic
            {% endif %}
        </div>
    </div>
</div>


{% if sideBlock != nil && payouts != nil %}
<div class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2 text-center" tabindex="-1">
    <div class="row align-items-start">
        <div class="col">
            <h2>Payouts share is weighted into</h2>
        </div>
    </div>
    <div class="row">
        <div class="col col-12">
            {% code var total uint64 %}
            {%= TemplatePayouts(ctx, payouts, &total) %}
            {% if total == 0 %}
            No payouts have been reported.
            {% endif %}
        </div>
        <div class="col col-12 mt-3">
            {% if sideBlock.EffectiveHeight > (ctx.Pool.SideChain.LastBlock.SideHeight - uint64(ctx.Pool.SideChain.Window.Blocks)) %}
            <div class="alert alert-success small">
                Share is inside the PPLNS window.
                <br/>
                Any Monero blocks found during this period by any P2Pool miner will provide a direct payout.
            </div>
            {% else %}
            <div class="alert alert-secondary small">
                Share is outside the PPLNS window.
                <br/>
                No more payouts for this share will be provided by other P2Pool miners.
            </div>
            <div class="center">Share is outside the PPLNS window. No more payouts for this share will be provided by other P2Pool miners.</div>
            {% endif %}
        </div>
    </div>
</div>
{% endif %}

<div class="center" style="text-align: center">
    {% if len(poolBlock.Side.Uncles) > 0 %}
    <h2>Uncle shares</h2>
    {% if sideBlock != nil && sideBlock.IsUncle() %}
    <p><strong>NOTE:</strong> Uncle shares do not have their listed uncles accounted for weight, the following list is just for reference.</p>
    {% endif %}
    <ul class="mono">
        {% for _, u := range poolBlock.Side.Uncles %}
        <li><a href="/share/{%= hex(ctx, u) %}">{%= hex(ctx, u) %}</a></li>
        {% endfor %}
    </ul>
    {% endif %}

    <h2>Coinbase Transaction</h2>

    {% if sideBlock != nil && sideBlock.MinedMainAtHeight && sweepsCount > 0 %}
    <table class="table table-striped table-hover table-borderless table-sm" style="max-width: calc(8em + 28em + 12em + 10em + 10em + 8em + 12em)">
        <tr><td colspan="{% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}7{% else %}6{% endif %}" class="mono smaller">{%s coinbase_extra(poolBlock) %}</td></tr>
        <tr><td colspan="{% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}7{% else %}6{% endif %}">&nbsp;</td></tr>
    {% elseif sideBlock != nil && sideBlock.MinedMainAtHeight %}
    <table class="table table-striped table-hover table-borderless table-sm" style="max-width: calc(8em + 28em + 12em + 10em + 10em + 8em)">
        <tr><td colspan="{% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}6{% else %}5{% endif %}" class="mono smaller">{%s coinbase_extra(poolBlock) %}</td></tr>
        <tr><td colspan="{% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}6{% else %}5{% endif %}">&nbsp;</td></tr>
    {% else %}
    <table class="table table-striped table-hover table-borderless table-sm" style="max-width: calc(8em + 28em + 12em + 10em)">
        <tr><td colspan="{% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}4{% else %}3{% endif %}" class="mono smaller">{%s coinbase_extra(poolBlock) %}</td></tr>
        <tr><td colspan="{% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}4{% else %}3{% endif %}">&nbsp;</td></tr>
    {% endif %}
        <thead>
        <tr>
            <th style="width: 8em">Output Index</th>
            <th style="width: 28em">Ephemeral Public Key</th>
            {% if sideBlock != nil && sideBlock.MinedMainAtHeight %}
            {% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}
            <th style="width: 12em">Receiver Address</th>
            {% endif %}
            <th style="width: 10em">Reward</th>
            {% else %}
            {% if len(coinbaseOutputs) >= len(poolBlock.Main.Coinbase.Outputs) %}
            <th style="width: 12em">Miner Address</th>
            {% endif %}
            <th style="width: 10em">Reward Share</th>
            {% endif %}
            {% if sideBlock != nil && sideBlock.MinedMainAtHeight %}
            <th style="width: 10em">Global Output Index</th>
            <th style="width: 8em">Proof</th>
            {% if sweepsCount > 0 %}
            <th style="width: 12em">Swept</th>
            {% endif %}
            {% endif %}
        </tr>
        </thead>
        <tbody>
        {% for _, t := range poolBlock.Main.Coinbase.Outputs %}
        <tr>
            <td>{%dul t.Index %}</td>
            <td class="mono smaller">{%= hex(ctx, t.EphemeralPublicKey) %}</td>
            {% code var globalOutputIndex uint64 %}
            {% if len(coinbaseOutputs) > int(t.Index) %}
            {% code globalOutputIndex = coinbaseOutputs[t.Index].GlobalOutputIndex %}
            {%= TemplateRowMiner(ctx, coinbaseOutputs[t.Index].MinerAddress, coinbaseOutputs[t.Index].MinerAlias) %}
            {% endif %}
            <td class="small" title="{%f.3 (float64(t.Reward) / float64(poolBlock.Main.Coinbase.TotalReward)) * 100 %}%">{%s monero_to_xmr(t.Reward) %} XMR</td>
            {% if sideBlock != nil && sideBlock.MinedMainAtHeight %}
            <td class="small">{%dul globalOutputIndex %}</td>
            <td class="small"><a href="/proof/{%= hex(ctx, sideBlock.MainId) %}/{%dul t.Index %}" title="Prove you have a matching output for this address on this transaction">[Payout Proof #{%dul t.Index %}]</a></td>
            {% if sweepsCount > 0 %}
            {% code outputSweeps := sweeps[t.Index] %}
            {% if len(outputSweeps) > 0 %}
            {% code sweep := outputSweeps[0] %}
            <td class="smaller" title="{%s utc_date(sweep.Timestamp) %}"><a href="/transaction-lookup?txid={%= hex(ctx, sweep.Id) %}" class="mono">{%= shorten(ctx, sweep.Id, 10) %} {%d sweep.MinerCount %} / {%d sweep.InputCount %}</a></td>
            {% elseif (ctx.Pool.MainChain.Height - sideBlock.MainHeight + 1) < 60 %}
            <td class="small">Not unlocked</td>
            {% else %}
            <td class="small">Not known</td>
            {% endif %}
            {% endif %}
            {% endif %}
        </tr>
        {% endfor %}
        </tbody>
    </table>
    {% if len(poolBlock.Main.Transactions) > 0 %}
    <h2>Included Transactions</h2>
    <ul class="mono">
        {% for _, t := range poolBlock.Main.Transactions %}
        <li><a href="/t/{%= henc(t) %}">{%= hex(ctx, t) %}</a></li>
        {% endfor %}
    </ul>
    {% endif %}
</div>
{% endfunc %}