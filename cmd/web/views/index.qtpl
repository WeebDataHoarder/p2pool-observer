{% import "git.gammaspectra.live/P2Pool/p2pool-observer/cmd/index" %}
{% import cmdutils "git.gammaspectra.live/P2Pool/p2pool-observer/cmd/utils" %}
{% import "math" %}
{% import "time" %}

{% code
type IndexPage struct {
	// inherit from base page, so its' title is used in error page.
	BasePage
	Refresh int
	Positions struct {
	    BlocksFound *cmdutils.PositionChart
	}

    Shares []*index.SideBlock
	FoundBlocks []*index.FoundBlock
}

func (p *IndexPage) IsRefresh() (ok, isRefresh bool, interval int, uriRefresh, uriStatic string) {
    return true, p.Refresh > 0, p.Refresh, "/?refresh", "/"
}

func (p *IndexPage) Name() string {
    return "index"
}
%}

{% func (p *IndexPage) Content() %}

<div class="container-fluid h-100 mb-3 p-2 bg-body-tertiary border rounded-2 text-center">
    <div class="row align-items-start">
        <div class="col">
            <h2>P2Pool statistics</h2>
        </div>
    </div>

    <div class="row row-cols-2 row-cols-lg-4 align-items-center">
        <div class="col pb-2" title="{%= hex(p.Context(), p.Context().Pool.SideChain.LastBlock.TemplateId) %}">
            <strong>P2Pool Height</strong>
            <br/>
            <a href="/share/{%= hex(p.Context(), p.Context().Pool.SideChain.LastBlock.TemplateId) %}">{%dul p.Context().Pool.SideChain.LastBlock.SideHeight %}</a>
        </div>
        <div class="col pb-2">
            <strong>P2Pool Hashrate</strong>
            <br/>
            {%s si_units(diff_hashrate(p.Context().Pool.SideChain.LastBlock.Difficulty, p.Context().Consensus.TargetBlockTime), 2) %}H/s
        </div>
        <div class="col pb-2" title="{%= hex(p.Context(), p.Context().Pool.MainChain.Id) %}">
            <strong>Monero Height</strong>
            <br/>
            <a href="/b/{%s benc(p.Context().Pool.MainChain.Height) %}">{%dul p.Context().Pool.MainChain.Height %}</a>
        </div>
        <div class="col pb-2">
            <strong>Monero Hashrate</strong>
            <br/>
            {%s si_units(diff_hashrate(p.Context().Pool.MainChain.Difficulty, uint64(p.Context().Pool.MainChain.Consensus.BlockTime)), 2) %}H/s
        </div>


        <div class="col pb-2">
            <strong>P2Pool Difficulty</strong>
            <br/>
            {%s si_units(p.Context().Pool.SideChain.LastBlock.Timestamp, 2) %}
        </div>
        <div class="col pb-2" title="Percentage of Monero hashrate this P2Pool has">
            <strong>P2Pool Monero %</strong>
            <br/>
            {%f.2 (float64(diff_hashrate(p.Context().Pool.SideChain.LastBlock.Difficulty, p.Context().Consensus.TargetBlockTime)) / float64(diff_hashrate(p.Context().Pool.MainChain.Difficulty, uint64(p.Context().Pool.MainChain.Consensus.BlockTime))))*100 %}%
        </div>
        <div class="col pb-2">
            <strong>Monero Difficulty</strong>
            <br/>
            {%s si_units(p.Context().Pool.MainChain.Difficulty.Lo, 2) %}
        </div>
        <div class="col pb-2" title="This includes blocks the site knows about since it started observing. There might be more orphaned or produced by other sidechain not included here.">
            <strong>Blocks Found</strong>
            <br/>
            {%dul p.Context().Pool.SideChain.Found %}
        </div>


        <div class="col pb-2" title="Miners that have ever mined a share on P2Pool">
            <strong>Miners Known</strong>
            <br/>
            {%dul p.Context().Pool.SideChain.Miners %}
        </div>
        <div class="col pb-2">
            <strong>Average Effort</strong>
            <br/>
            <span class="small" style="color: {%s effort_color(p.Context().Pool.SideChain.Effort.Average10) %};" title="Last 10 found blocks">{%f.2 p.Context().Pool.SideChain.Effort.Average10 %}%</span>
            /
            <span style="font-weight:bolder; color: {%s effort_color(p.Context().Pool.SideChain.Effort.Average50) %};" title="Last 50 found blocks">{%f.2 p.Context().Pool.SideChain.Effort.Average50 %}%</span>
            /
            <span class="small" style="color: {%s effort_color(p.Context().Pool.SideChain.Effort.Average200) %};" title="Last 200 found blocks">{%f.2 p.Context().Pool.SideChain.Effort.Average200 %}%</span>
        </div>
        <div class="col pb-2" title="Mean frequency between P2Pool finds Monero Blocks">
            <strong>Block Found Frequency</strong>
            <br/>
            {%s time_duration(float64(p.Context().Pool.MainChain.Difficulty.Lo) / float64(diff_hashrate(p.Context().Pool.SideChain.LastBlock.Difficulty, p.Context().Consensus.TargetBlockTime))) %}
        </div>
        <div class="col pb-2">
            <strong>Last Found Block</strong>
            <br/>
            {% if p.Context().Pool.SideChain.LastFound != nil %}
            <td title="{%s utc_date(p.Context().Pool.SideChain.LastFound.MainBlock.Timestamp) %}">{%s time_elapsed_short(p.Context().Pool.SideChain.LastFound.MainBlock.Timestamp) %}</td>
            {% else %}
            <td>-</td>
            {% endif %}
        </div>


        <div class="col pb-2" title="Current miners on P2Pool PPLNS window">
            <a href="/miners">
            <strong>Window Miners</strong>
            <br/>
            {%d p.Context().Pool.SideChain.Window.Miners %}
            </a>
        </div>
        <div class="col pb-2">
            <strong>Current Effort</strong>
            <br/>
            <span style="font-weight:bolder; color: {%s effort_color(p.Context().Pool.SideChain.Effort.Current) %};">{%f.2 p.Context().Pool.SideChain.Effort.Current %}%</span>
        </div>
        <div class="col pb-2">
            <strong>Window Blocks</strong>
            <br/>
            {%d p.Context().Pool.SideChain.Window.Blocks %} blocks (+{%d p.Context().Pool.SideChain.Window.Uncles %} uncles)
        </div>
        <div class="col pb-2">
            <strong>Last Share</strong>
            <br/>
            <span title="{%s utc_date(p.Context().Pool.SideChain.LastBlock.Timestamp) %}">{%s time_elapsed_short(p.Context().Pool.SideChain.LastBlock.Timestamp) %}</span>
        </div>


    </div>
</div>

<div class="container-fluid mb-2">
    <div class="row">
        <div class="col-12 col-md-6 mb-2 p-3 bg-body-tertiary border rounded-2">
            <div class="h-100">
                <h3>Lookup miner statistics</h3>

                <form action="/miner" method="get">
                    <div class="mb-3">
                        <label for="miner-address">Payout Monero address or Miner Alias</label>
                        <input type="text" name="address" id="miner-address"
                        class="form-control mono smaller" style="height: calc(24px + 6px + 6px);"
                        placeholder="{%s p.Context().DonationAddress %}"
                        size="96" spellcheck="false" autocorrect="off"
                        pattern="([^0-9].+|4[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+)"
                        title="Only Primary Addresses supported (starts with 4, not 8), or chosen miner alias"
                        required/>
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-secondary">Lookup</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="col-12 col-md-6 mb-2 p-0">
            <div class="ms-md-2 p-3 bg-body-tertiary border rounded-2 h-100">
                <h3>Share Time Calculator</h3>

                <form action="/calculate-share-time" method="get">
                    <div class="row g-2 mb-3">
                        <div class="col-8">
                            <label for="hashrate">Your Hashrate</label>
                            <input type="text" inputmode="decimal" pattern="[0-9]+([\.,][0-9]+)?" name="hashrate" id="hashrate" class="form-control" placeholder="100" size="8" required/>
                        </div>

                        <div class="col-4">
                            <label for="magnitude"></label>
                            <select name="magnitude" class="form-select">
                                <option value="1">H/s</option>
                                <option value="1000" selected>KH/s</option>
                                <option value="1000000">MH/s</option>
                                <option value="1000000000">GH/s</option>
                            </select>
                        </div>
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-secondary">Calculate</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="container-fluid mb-3 p-2 bg-body-tertiary border rounded-2 text-center">
    <div class="row align-items-start">
        <div class="col">
            <h2>Recent Monero blocks found</h2>
        </div>
    </div>
    <div class="row">
        {% if len(p.FoundBlocks) > 0 %}
        <div class="col col-12">
            {% code blocksDuration := time.Now().UTC().Sub(time.Unix(int64(p.FoundBlocks[len(p.FoundBlocks)-1].MainBlock.Timestamp), 0).UTC()) %}
            {% code blocksDurationPadded := time.Hour * 24 * time.Duration(int64(math.Ceil(blocksDuration.Hours()/24))) %}

            {% code dividersX, dividersY, points := NewBlocksPositionChart(p.Context(), p.FoundBlocks, DefaultBlocksPositionChartDuration) %}
            {%= TemplatePositionGraph(dividersX, dividersY, points, 80, time_duration_long(DefaultBlocksPositionChartDuration.Seconds()) + " ago", "Now") %}

            {% if (blocksDurationPadded.Hours()/24) > 2 %}
            <br/>

            {% code dividersX, dividersY, points = NewBlocksPositionChart(p.Context(), p.FoundBlocks, blocksDuration) %}
            {%= TemplatePositionGraph(dividersX, dividersY, points, 120, time_duration_long(blocksDurationPadded.Seconds()) + " ago", "Now") %}

            {% endif %}
        </div>
        {% endif %}
        <div class="col col-12">
            {%= TemplateFoundBlocks(p.Context(), slice_maxSize(p.FoundBlocks, 12), false) %}
        </div>
        <div class="col my-3 col-12">
            <a href="/blocks" class="btn btn-lg btn-primary">
            More found blocks
            </a>
        </div>
    </div>

</div>



<div class="container-fluid mb-3 p-2 bg-body-tertiary border rounded-2 text-center">
    <div class="row align-items-start">
        <div class="col">
            <h2>Recent P2Pool shares found</h2>
        </div>
    </div>
    <div class="row">
        <div class="col col-12">
            {%= TemplateShares(p.Context(), p.Shares, false, nil) %}
        </div>
    </div>

</div>
{% endfunc %}