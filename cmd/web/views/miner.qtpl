{% import "git.gammaspectra.live/P2Pool/p2pool-observer/cmd/index" %}
{% import "git.gammaspectra.live/P2Pool/p2pool-observer/p2pool/sidechain" %}

{% import p2pooltypes "git.gammaspectra.live/P2Pool/p2pool-observer/p2pool/types" %}
{% import cmdutils "git.gammaspectra.live/P2Pool/p2pool-observer/cmd/utils" %}
{% import "git.gammaspectra.live/P2Pool/p2pool-observer/utils" %}
{% import "git.gammaspectra.live/P2Pool/p2pool-observer/types" %}
{% import "fmt" %}
{% import "time" %}
{% import "math" %}

{% import (
    _ "embed"
) %}

{% code
//go:embed "css/miner.css"
var minerCssContent string
%}

{% code

type MinerPageSectionData struct {
    Shares []*index.SideBlock
    Hashrate uint64
    Ratio float64
    ExpectedReward uint64
    Weight types.Difficulty
    Total types.Difficulty
    Efforts []float64
}

type MinerPage struct {
	// inherit from base page, so its' title is used in error page.
	BasePage
	Refresh int
	Positions struct {
	    BlocksInWindow *cmdutils.PositionChart
	    UnclesInWindow *cmdutils.PositionChart
	}
	Day MinerPageSectionData
	Window MinerPageSectionData
	Last MinerPageSectionData

	Miner *cmdutils.MinerInfoResult
	LastPoolBlock *sidechain.PoolBlock
	LastOrphanedShares []*index.SideBlock
	LastFound []*index.FoundBlock
	LastPayouts []*index.Payout
	LastSweeps <-chan *index.MainLikelySweepTransaction

    HashrateSubmit bool
	HashrateLocal float64
	MagnitudeLocal float64
}

func (p *MinerPage) IsRefresh() (ok, isRefresh bool, interval int, uriRefresh, uriStatic string) {
    baseAddress := string(p.Miner.Address.ToBase58())
    return true, p.Refresh > 0, p.Refresh, fmt.Sprintf("/miner/%s?refresh", baseAddress), fmt.Sprintf("/miner/%s", baseAddress)
}

func (p *MinerPage) Name() string {
    return "miner"
}
%}

{% func (p *MinerPage) Style() %}
{%= p.BasePage.Style() %}

{%s= minerCssContent %}

{% endfunc %}

{% func (p *MinerPage) Title() %}
{%= p.BasePage.Title() %} - Miner {%z= p.Miner.Address.ToBase58() %}
{% endfunc %}

{% func (p *MinerPage) Content() %}

<div class="btn-group btn-group-sm page-tab" role="group">
    <a href="#page-miner" class="btn p-1 btn-outline-secondary">Miner</a>
    <a href="#page-payouts" class="btn p-1 btn-outline-secondary">Payouts</a>
    <a href="#page-shares" class="btn p-1 btn-outline-secondary">Shares</a>
    {% if len(p.LastFound) > 0 %}
    <a href="#page-blocks" class="btn p-1 btn-outline-secondary">Blocks</a>
    {% endif %}
    <a href="#page-sweeps" class="btn p-1 btn-outline-secondary">Sweeps</a>
    <a href="/miner-options/{%z= p.Miner.Address.ToBase58() %}" class="btn btn-outline-secondary">Options</a>
</div>


<div id="page-miner" class="container-fluid h-100 my-3 text-center">
    {% if p.Miner.LastShareTimestamp == 0 %}
    <div class="alert alert-warning" role="alert">
        <h3>No shares have been reported to this P2Pool network in the past for this miner.</h3>

        <p>Finding shares is a random process based on your hashrate vs this P2Pool hashrate. This can take several days for low hashrate miners, and depending on your luck.</p>
        <p>Please use the Share Time Calculator below to find your average share time (with average luck).</p>
        <p>You can also verify you are reachable by opening ports with the checker below.</p>
        <br/>

          <a class="btn btn-lg btn-primary text-white" href="/calculate-share-time">Share Time Calculator</a>
          <a class="btn btn-lg btn-primary text-white" href="/connectivity-check">Connectivity Check</a>
    </div>
    {% endif %}

    {% if p.LastPoolBlock != nil && p.LastPoolBlock.ShareVersion() < sidechain.ShareVersion_V2 && p.LastPoolBlock.ShareVersionSignaling() != sidechain.ShareVersion_V2 %}
    <div class="alert alert-danger" role="alert">
        <h3 title="Share version {%s p.LastPoolBlock.ShareVersion().String() %}, signaling {%s p.LastPoolBlock.ShareVersionSignaling().String() %}">Recent shares indicate you are running an outdated version of P2Pool</h3>

        <p>A new version of <a href="https://github.com/SChernykh/p2pool/releases/tag/v3.3">P2Pool (v3.0+)</a> has been released with several improvements, which requires a consensus change.</p>
        <p>P2Pool (not Monero!) has hardforked to new consensus rules on <strong>March 18th, 2023 at 21:00 UTC</strong>. All versions before P2Pool v3.0 are incompatible. P2Pool v3.3+ is recommended.</p>
        <p>If you keep using previous versions, you will keep mining as usual, but become almost a solo miner, as incompatible clients will mine on their own.</p>
        <p>{% if p.Context().NetServiceAddress == "p2pool.observer" %}After the fork, you can check on <a href="{%s p.Context().GetUrl("old.p2pool.observer") %}/miner/{%z= p.Miner.Address.ToBase58() %}">OLD.P2Pool.Observer</a>.{% elseif p.Context().NetServiceAddress == "mini.p2pool.observer" %}After the fork, you can check on <a href="https://{%s p.Context().GetUrl("old-mini.p2pool.observer") %}/miner/{%z= p.Miner.Address.ToBase58() %}">OLD-MINI.P2Pool.Observer</a>.{% else %}Please check on an observer tracking the old chain.{% endif %}</p>
        <p>After upgrading to a supported P2Pool version and mining a share, this message will be dismissed.</p>
    </div>

    {% elseif p.LastPoolBlock != nil && p.LastPoolBlock.ShareVersion() > sidechain.ShareVersion_V1 && p.LastPoolBlock.Side.ExtraBuffer.SoftwareId == p2pooltypes.SoftwareIdP2Pool && p.LastPoolBlock.Side.ExtraBuffer.SoftwareVersion.String() != p.Context().Pool.Versions.P2Pool.ShortVersion().String() %}
    <div class="alert alert-warning" role="alert">
        <h3>Recent shares indicate you are running an older version of P2Pool</h3>

        <p><a href="{%s p.Context().Pool.Versions.P2Pool.Link %}">P2Pool {%s p.Context().Pool.Versions.P2Pool.Version %}</a> has been released.</p>
        <p>Your most recent share indicates are currently running {%= software_info(p.LastPoolBlock.Side.ExtraBuffer.SoftwareId, p.LastPoolBlock.Side.ExtraBuffer.SoftwareVersion) %}. It is recommended to upgrade.</p>
        <p>After upgrading to this P2Pool version and mining a share, this message will be dismissed.</p>
    </div>
    {% endif %}
    <div class="row row-cols-1 p-2 mb-3 bg-body-tertiary border rounded-2">
        <div class="col mb-3 text-truncate">
            <h3>Payout Address</h3>
            <small class="mono user-select-all">{%z= p.Miner.Address.ToBase58() %}</small>
        </div>

        {% if p.Miner.Alias != "" %}
        <div data-tooltip class="col mb-2" title="Miner Alias is user content and not verified. This value should only be used for vanity purposes.">
            <h5>Miner Alias</h5>
            <span class="mono">{%s p.Miner.Alias %}</span>
        </div>
        {% endif %}
        <div class="col mb-2" title="{%s utc_date(p.Miner.LastShareTimestamp) %}">
            <h5>Last Share</h5>
            {%s time_elapsed_short(p.Miner.LastShareTimestamp) %}
        </div>

        <!--<p><small><a href="/miner-options/{%z= p.Miner.Address.ToBase58() %}#mineralias">[Change Miner Alias]</a> :: <a href="/miner-options/{%z= p.Miner.Address.ToBase58() %}#webhooks">[Configure WebHook notifications]</a></small></p>-->
    </div>

    <div class="row row-cols-1 row-cols-lg-4 p-2 bg-body-tertiary border rounded-2">
        <div class="col pb-2">
            <strong><small>Current Shares</small></strong>
            <br/>
            {%dul p.Positions.BlocksInWindow.Total() %} blocks (+{%dul p.Positions.UnclesInWindow.Total() %} uncles)
        </div>
        <div class="col pb-2">
            <strong><small>Estimated Hashrate</small></strong>
            <br/>
            {%s si_units(p.Window.Hashrate, 3) %}H/s
        </div>
        <div class="col pb-2">
            <strong><small>Pool Share %</small></strong>
            <br/>
            {%f.3 p.Window.Ratio*100 %}%
        </div>
        <div class="col pb-2">
            <strong><small>Estimated Window Reward</small></strong>
            <br/>
            {%s monero_to_xmr(p.Window.ExpectedReward) %} XMR
        </div>

        <div class="col pb-2">
            <strong><small>Day Shares</small></strong>
            <br/>
            {% code uncleCount := utils.SliceCount(p.Day.Shares, func(s *index.SideBlock) bool {return s.IsUncle()}) %}
            {%d len(p.Day.Shares) - uncleCount %} blocks (+{%d uncleCount %} uncles)
        </div>
        <div class="col pb-2">
            <strong><small>Day Hashrate</small></strong>
            <br/>
            {%s si_units(p.Day.Hashrate, 3) %}H/s
        </div>
        <div class="col pb-2">
            <strong><small>Day Share %</small></strong>
            <br/>
            {%f.3 p.Day.Ratio*100 %}%
        </div>
        <div class="col pb-2">
            <strong><small>Estimated Daily Reward</small></strong>
            <br/>
            {%s monero_to_xmr(p.Day.ExpectedReward) %} XMR
        </div>

        {% if len(p.Last.Shares) > len(p.Day.Shares) %}
            <div class="col pb-2">
                <strong><small>Estimated Total Shares</small></strong>
                <br/>
                {% if p.LastPoolBlock != nil %}Around {%dul p.Miner.Shares[1].ShareCount %} blocks (+{%dul p.Miner.Shares[1].UncleCount %} uncles{% if p.Miner.Shares[0].ShareCount > 0 %}, +{%dul p.Miner.Shares[0].ShareCount %} orphans{% endif %}){% else %}No shares reported{% endif %}
            </div>
            <div class="col pb-2">
                <strong><small>Historical Hashrate</small></strong>
                <br/>
                {%s si_units(p.Last.Hashrate, 3) %}H/s
            </div>
            <div class="col pb-2">
                <strong><small>Historical Share %</small></strong>
                <br/>
                {%f.3 p.Last.Ratio*100 %}%
            </div>
            <div class="col pb-2">
                <strong><small>Historical Daily Reward</small></strong>
                <br/>
                {% code lastTotalDuration := time.Now().UTC().Sub(time.Unix(int64(p.Last.Shares[len(p.Last.Shares)-1].Timestamp), 0).UTC()) %}
                {%s monero_to_xmr(uint64(float64(p.Last.ExpectedReward) / (lastTotalDuration.Seconds() / (3600 * 24)))) %} XMR
            </div>
        {% endif %}
    </div>
</div>

<div id="page-miner" class="my-3">
    <div class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2">

        <div class="row row-cols-1 row-cols-xxl-12">
            <div class="col col-xxl-8 mb-2">
                <h3>Recent shares</h3>

                {% code shares := p.Day.Shares %}
                {% code efforts := p.Day.Efforts %}

                {% if len(p.Last.Shares) > len(p.Day.Shares) %}
                    {% code shares = p.Last.Shares %}
                    {% code efforts = p.Last.Efforts %}
                {% endif %}

                {% code sharesDuration := time.Now().UTC().Sub(time.Unix(int64(shares[len(shares)-1].Timestamp), 0).UTC()) %}
                {% code sharesDurationPadded := time.Hour * 24 * time.Duration(int64(math.Ceil(sharesDuration.Hours()/24))) %}

                {% code dividersX, dividersY, points := NewSharesPositionChart(p.Context(), shares, &p.LastPayouts, efforts, DefaultSharesPositionChartDuration) %}
                {%= TemplatePositionGraph(dividersX, dividersY, points, 80, time_duration_long(DefaultSharesPositionChartDuration.Seconds()) + " ago", "Now") %}

                {% if (sharesDurationPadded.Hours()/24) > 5 %}
                <br/>
                {% code dividersX, dividersY, points = NewSharesPositionChart(p.Context(), shares, &p.LastPayouts, efforts, sharesDuration) %}
                {%= TemplatePositionGraph(dividersX, dividersY, points, 120, time_duration_long(sharesDurationPadded.Seconds()) + " ago", "Now") %}
                {% endif %}

            </div>
            <div class="col col-xxl-4 mb-2">
                <h3>Shares in PPLNS window</h3>

                <code class="position-chart">{%s p.Positions.BlocksInWindow.String() %}</code>
                <br/>
                <code class="position-chart">{%s p.Positions.UnclesInWindow.String() %}</code>
            </div>
            <div class="col col-xxl-12 mb-2">
                <div class="alert alert-secondary small mt-2">
                    Shares appear on the right, and get older towards the left.
                    <br/>
                    Uncle shares are displayed as squares on the graph.
                    <br/>
                    Payouts are displayed via dashed vertical lines on the graph.
                    <br/>
                    Shares within the PPLNS window will be weighted towards receiving a payout when any Monero block is found by any P2Pool miner.
                </div>
            </div>
        </div>
    </div>
</div>

<div id="page-payouts" class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2 text-center" tabindex="-1">
    <div class="row align-items-start">
        <div class="col">
            <h2>Most recent payouts</h2>
        </div>
    </div>
    <div class="row">
        <div class="col col-12">
            {% if len(p.LastPayouts) == 0 %}
            No payouts have been reported.
            {% else %}
            {%= TemplatePayoutsSlice(p.Context(), slice_maxSize(p.LastPayouts, 12)) %}
            {% endif %}
        </div>
        <div class="col col-12 mt-3">
            <div class="alert alert-secondary small">
                Payouts happen when a Monero block is found by P2Pool miners and shares are in the PPLNS window.
                <br/>
                There is no balance in P2Pool. All rewards are paid out instantly to everyone as part of the mining process.
            </div>
        </div>
        <div class="col my-3 col-12">
            <a href="/payouts/{%z= p.Miner.Address.ToBase58() %}" class="btn btn-lg btn-primary">
            Payout History
            </a>
        </div>
    </div>
</div>


<div id="page-shares">
    <div class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2 text-center">
        <div class="row align-items-start">
            <div class="col">
                <h2>Most recent shares</h2>
            </div>
        </div>

        <div class="row row-cols-12">
            <div class="col col-12 mb-3">
                <div class="alert alert-secondary small">
                    Shares are listed here when they are accepted by the P2Pool network.
                    <br/>
                    Finding shares is a random, memory-less process, and effort may vary depending on your miner luck.
                </div>
            </div>

            <div class="col col-12">
                {% if len(p.Last.Shares) == 0 %}
                No shares have been reported to P2Pool network.
                {% else %}
                    {%= TemplateShares(p.Context(), slice_maxSize(p.Last.Shares, 60), true, p.Last.Efforts) %}
                {% endif %}
            </div>
        </div>

        {% if p.Miner.LastShareTimestamp != 0 %}
        <form action="/miner/{%z= p.Miner.Address.ToBase58() %}" method="get">
            <div class="row row-cols-12 g-2 my-3">
                <div class="col-12">
                    <h5>Effort Calculation</h5>
                    <p>Local hashrate of each P2Pool miner is not known by the network. A guess is calculated based on daily estimation. If you provide a value here, it will be more accurate for effort calculation.</p>
                    <p>This data will not be saved.</p>
                </div>

                <div class="col-8">
                    <label for="hashrate_local">Your Local Hashrate</label>
                    <input type="text" inputmode="decimal" pattern="[0-9]+([\.,][0-9]+)?" name="hashrate" id="hashrate_local" class="form-control" size="8" value="{% if p.HashrateLocal > 0 %}{%s str(p.HashrateLocal) %}{% endif %}" required/>
                </div>

                <div class="col-4">
                    <label for="magnitude"></label>
                    <select name="magnitude" class="form-select">
                        <option value="1"{% if p.MagnitudeLocal == 1 %} selected{% endif %}>H/s</option>
                        <option value="1000"{% if p.MagnitudeLocal == 1000 %} selected{% endif %}>KH/s</option>
                        <option value="1000000"{% if p.MagnitudeLocal == 1000000 %} selected{% endif %}>MH/s</option>
                        <option value="1000000000"{% if p.MagnitudeLocal == 1000000000 %} selected{% endif %}>GH/s</option>
                    </select>
                </div>

                <div class="col-12">
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-secondary">Calculate</button>
                    </div>
                </div>
            </div>
        </form>
        {% endif %}
    </div>

    {% if len(p.LastOrphanedShares) > 0 %}
    <div class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2 text-center" tabindex="-1">
        <div class="row align-items-start">
            <div class="col">
                <h2>Most recent orphaned shares</h2>
            </div>
        </div>
        <div class="row">
            <div class="col col-12">
                {%= TemplateShares(p.Context(), p.LastOrphanedShares, true, nil) %}
            </div>
        </div>
    </div>
    {% endif %}
</div>



{% if len(p.LastFound) > 0 %}
<div id="page-blocks" class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2 text-center" tabindex="-1">
    <div class="row align-items-start">
        <div class="col">
            <h2>Most recent Monero blocks found</h2>
        </div>
    </div>
    <div class="row">
        <div class="col col-12">
            {%= TemplateFoundBlocks(p.Context(), p.LastFound, true) %}
        </div>
        <div class="col my-3 col-12">
            <a href="/blocks?miner={%z= p.Miner.Address.ToBase58() %}" class="btn btn-lg btn-primary">
            More found blocks
            </a>
        </div>
    </div>
</div>
{% endif %}

<div id="page-sweeps" class="container-fluid my-3 p-2 bg-body-tertiary border rounded-2 text-center" tabindex="-1">
    <div class="row align-items-start">
        <div class="col">
            <h2>Most recent likely sweeps</h2>
        </div>
    </div>
    <div class="row">
        <div class="col col-12">
            {%= TemplateSweeps(p.Context(), p.LastSweeps, true) %}
        </div>
        <div class="col my-3 col-12">
            <a href="/sweeps?miner={%z= p.Miner.Address.ToBase58() %}" class="btn btn-lg btn-primary" tabindex="-1">
            More likely sweeps
            </a>
        </div>
    </div>
</div>

{% endfunc %}
